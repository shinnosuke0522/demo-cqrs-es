[versions]
kotlin = "2.2.0"
spring-boot-plugin = "4.0.0-SNAPSHOT"
spring-dep-mgmt = "1.1.7"
arrow = "2.1.0"

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-gradle = { id = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot-plugin" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dep-mgmt" }

[libraries]
#Spring Boot
## WEB
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
reactor-kotlin-extensions = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor" }

## GraphQL
spring-boot-starter-graphql = { module = "org.springframework.boot:spring-boot-starter-graphql" }

## RDB
spring-boot-starter-jooq = { module = "org.springframework.boot:spring-boot-starter-jooq" }
spring-boot-starter-flyway = { module = "org.springframework.boot:spring-boot-starter-flyway" }
flyway-postgresql = { module = "org.flywaydb:flyway-database-postgresql" }
postgresql = { module = "org.postgresql:postgresql" }

## NoSQL
mongodb-driver = { module = "org.mongodb:mongodb-driver-kotlin-coroutine" }
bson-kotlinx = {module = "org.mongodb:bson-kotlinx"}

## Kafka
spring-boot-starter-kafka = { module = "org.springframework.boot:spring-boot-starter-kafka" }

## Others
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools" }

# Test
## Spring Boot Test
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
reactor-test = { module = "io.projectreactor:reactor-test" }
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test" }

## Spring API Test
spring-graphql-test = { module = "org.springframework.graphql:spring-graphql-test" }

## Spring Kafka Test
spring-kafka-test = { module = "org.springframework.kafka:spring-kafka-test" }

## Testcontainers
spring-boot-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter" }
testcontainers-kafka = { module = "org.testcontainers:kafka" }
testcontainers-mongodb = { module = "org.testcontainers:mongodb" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }

# Utils
ulid = { module = "com.github.f4b6a3:ulid-creator", version = "5.2.3" }
kotlin-result = { module = "com.michael-bull.kotlin-result:kotlin-result", version = "2.1.0" }
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-fx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }


[bundles]
web = [
    "spring-boot-starter-webflux",
    "jackson-module-kotlin",
    "reactor-kotlin-extensions",
    "kotlin-reflect",
    "kotlinx-coroutines-reactor",
    "spring-boot-starter-actuator",
    "spring-boot-devtools",
]
graphql = [
    "spring-boot-starter-graphql",
]
mongo = [
    "mongodb-driver",
    "bson-kotlinx"
]
rdb = [
    "postgresql",
    "spring-boot-starter-flyway",
    "flyway-postgresql",
    "spring-boot-starter-jooq",
]
kafka = [
    "spring-boot-starter-kafka",
]
web-test = [
    "spring-boot-starter-test",
    "reactor-test",
    "kotlin-test-junit5",
    "kotlinx-coroutines-test",
]
graphql-test = [
    "spring-graphql-test",
]
postgresql-test = [
    "spring-boot-testcontainers",
    "testcontainers-junit-jupiter",
    "junit-platform-launcher",
    "testcontainers-postgresql",
]
mongodb-test = [
    "spring-boot-testcontainers",
    "testcontainers-junit-jupiter",
    "junit-platform-launcher",
    "testcontainers-mongodb",
]
kafka-test = [
    "spring-kafka-test",
    "spring-boot-testcontainers",
    "testcontainers-junit-jupiter",
    "junit-platform-launcher",
    "testcontainers-kafka",
]
arrow = [
    "arrow-core",
    "arrow-fx-coroutines",
]

